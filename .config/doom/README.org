#+TITLE: Doom configs
#+AUTHOR: hakou guelfen
#+STARTUP: showeverything
#+PROPERTY: header-args :tangle config.el
#+auto_tangle: t

# install all-the-icons-install-fonts

* TABLE OF CONTENTS :toc:
- [[#defaults][DEFAULTS]]
- [[#flutter][FLUTTER]]
- [[#org-mode][ORG MODE]]
- [[#org-auto-tangle][ORG AUTO TANGLE]]
- [[#treemacs][TREEMACS]]
- [[#latex][LATEX]]
- [[#imenu][IMENU]]
- [[#transparency][TRANSPARENCY]]

* DEFAULTS
#+begin_src emacs-lisp
(setq user-full-name "hakou guelfen"
      user-mail-address "hakoudev@gmail.com")
(setq doom-font (font-spec :family "Fira Code" :size 22 :weight 'semi-light)
      doom-variable-pitch-font (font-spec :family "Fira Code" :size 20))

(require 'yaml-mode)
(require 'yaml)

(defun load-yaml-file (filename)
  (with-temp-buffer
    (insert-file-contents filename)
    (goto-char (point-min))
    (yaml-mode)
    (setq my-data (yaml-parse-string (buffer-string))))
  my-data)

(setq my-data (load-yaml-file "~/.config/theme/setting.yaml"))
(setq emacs-setting (gethash 'emacs (gethash 'setting my-data)))
(message "The Emacs setting is `%s`." (intern emacs-setting))

(setq doom-theme (intern emacs-setting))

(setq display-line-numbers-type t)
(setq org-directory "~/org/")
(setq confirm-kill-emacs nil)

(setq haskell-stylish-on-save t)

(add-hook 'before-save-hook #'+format/buffer nil t)

(beacon-mode 1)
#+end_src

* FLUTTER
#+begin_src emacs-lisp
;; add this to .emacs.d/early-init.el for flutter to work properly
;; it adds the flutter sdk path to emacs
;; (setenv "PATH" (concat (getenv "PATH") ":/opt/flutter/bin"))
;; (setq exec-path (append exec-path '("/opt/flutter/bin")))

(use-package dart-mode
  :custom
  (dart-format-on-save t))

(use-package flutter
  :after dart-mode
  :hook (dart-mode . (lambda ()
    (add-hook 'after-save-hook #'flutter-run-or-hot-reload nil t))))

(defun flutter-run-dev ()
  (interactive)
  (let ((flutter-command "flutter run --flavor dev -t lib/main/main_dev.dart"))
    (flutter-run "--flavor dev -t lib/main/main_dev.dart")))

(defun flutter-run-prod ()
  (interactive)
  (let ((flutter-command "flutter run --flavor prod -t lib/main/main_prod.dart"))
    (flutter-run "--flavor prod -t lib/main/main_prod.dart")))


(map! :leader
      (:prefix ("m" . "prefix")
        :desc "flutter-run_dev"
        "f d" #'flutter-run-dev))

(map! :leader
      (:prefix ("m" . "prefix")
        :desc "flutter-run_prod"
        "f p" #'flutter-run-prod))
#+end_src

* ORG MODE
#+begin_src emacs-lisp
(after! org
  (setq org-directory "~/Documents/Org")
  (setq org-agenda-files '("~/Documents/Org/hanuut_roadmap.org"))
  (setq org-log-done 'time))
#+end_src

* ORG AUTO TANGLE
#+begin_src emacs-lisp
(use-package! org-auto-tangle
  :defer t
  :hook (org-mode . org-auto-tangle-mode)
  :config
  (setq org-auto-tangle-default t))
#+end_src

* TREEMACS
#+begin_src emacs-lisp
(use-package! treemacs
  :defer t
  :config
  (setq doom-themes-treemacs-theme "doom-colors"))
#+end_src

* LATEX
#+begin_src emacs-lisp
(setq +latex-viewers '(zathura))
(with-eval-after-load 'ox-latex
(add-to-list 'org-latex-classes
             '("org-plain-latex"
               "\\documentclass{article}
           [NO-DEFAULT-PACKAGES]
           [PACKAGES]
           [EXTRA]"
               ("\\section{%s}" . "\\section*{%s}")
               ("\\subsection{%s}" . "\\subsection*{%s}")
               ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
               ("\\paragraph{%s}" . "\\paragraph*{%s}")
               ("\\subparagraph{%s}" . "\\subparagraph*{%s}"))))
#+end_src

* IMENU
#+begin_src emacs-lisp
(map! :leader
      (:prefix ("o" . "Toggle")
       :desc "Toggle imenu shown in a sidebar" "i" #'lsp-ui-imenu))
#+end_src

* TRANSPARENCY
#+begin_src emacs-lisp
(add-to-list 'default-frame-alist '(alpha-background . 90))
#+end_src
